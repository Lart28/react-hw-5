{"version":3,"file":"static/js/122.107be005.chunk.js","mappings":"2NAMe,SAASA,IACtB,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,GAADC,OATQ,6BASI,aAAAA,OAAYJ,EAAO,qBAAAI,OARxB,qCASTC,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAM,yFAClC,IACCN,MAAK,SAAAO,GAAO,OAAIjB,EAAYiB,EAAQ,IACpCC,OAAM,SAAAf,GAAK,OAAIC,EAASD,EAAM,GACnC,GAAG,CAACE,KAIFc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGlB,IAASmB,EAAAA,EAAAA,KAAA,MAAAD,SAAKlB,EAAMoB,UACpBxB,IAAYuB,EAAAA,EAAAA,KAAA,WAAAD,UACXF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGtB,EAASyB,SACRzB,EAASyB,QAAQC,KAAI,SAAAC,GAAA,IAAEC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OACxCV,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKO,KACLN,EAAAA,EAAAA,KAAA,KAAAD,SAAIQ,MAFGF,EAGJ,IAEoB,IAA5B5B,EAASyB,QAAQM,SAAgBR,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oDAK/C,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'af02fe4d7c3feb4bd28b36239d2e4dd2';\n\nexport default function Reviews() {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } \n        return Promise.reject(new Error('Сталась помилка'))\n      })\n      .then(reviews => setResponse(reviews))\n      .catch(error => setError(error))\n  }, [movieId])\n  \n\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n      {response && <section>\n        <ul>\n          {response.results &&\n            response.results.map(({id, author, content}) =>\n              <li key={id}>\n                <h4>{author}</h4>\n                <p>{content}</p>\n              </li>)\n          }\n          {response.results.length === 0 && <p>We don't have any reviews for this movie</p>}\n        </ul>\n      </section>}\n    </>\n  )\n}\n"],"names":["Reviews","_useState","useState","_useState2","_slicedToArray","response","setResponse","_useState3","_useState4","error","setError","movieId","useParams","useEffect","fetch","concat","then","res","ok","json","Promise","reject","Error","reviews","catch","_jsxs","_Fragment","children","_jsx","message","results","map","_ref","id","author","content","length"],"sourceRoot":""}