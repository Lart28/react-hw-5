{"version":3,"file":"static/js/724.f475ff68.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useEffect, useRef, useState, Suspense } from \"react\";\nimport { Link, NavLink, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nconst StyledInfo = styled.div`\n  display: flex;\n  gap: 15px;\n`\nconst StyledLink = styled(NavLink)`\n  border: 1px solid black;\n  border-radius: 6px;\n  font-weight: 600;\n  margin: 10px 5px;\n  display: block;\n  max-width: 60px;\n  text-decoration: none;\n`\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'af02fe4d7c3feb4bd28b36239d2e4dd2';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}`)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } \n        return Promise.reject(new Error('Сталась помилка'))\n      })\n      .then(movie => setResponse(movie))\n      .catch(error => setError(error))\n  }, [movieId])\n  \n  return (\n    <>\n      <StyledLink to={BackLinkLocationRef.current}>Go Back</StyledLink>\n      {error && <h1>{error.message}</h1>}\n      {response &&\n        <>\n          <StyledInfo>\n            <img width='250px' src={`${IMG_URL}/${response.poster_path}`} alt={`poster of movie ${response.title}`} />\n            <div>\n              <h1>{response.title} ({response.release_date.slice(0, 4)})</h1>\n              <p>User score: {Math.round(response.vote_average * 10)}%</p>\n              <h2>Overview</h2>\n              <p>{response.overview}</p>\n              <h3>Genres</h3>\n              <p>{response.genres.map(genre => genre.name + ' ')}</p>\n            </div>\n          </StyledInfo>\n          <hr></hr>\n          <div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to='cast'>Cast</Link>\n              </li>\n              <li>\n                <Link to='reviews'>Reviews</Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>}\n    </>\n  )\n}"],"names":["StyledInfo","styled","_templateObject","_taggedTemplateLiteral","StyledLink","NavLink","_templateObject2","MovieDetails","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","response","setResponse","_useState3","_useState4","error","setError","location","useLocation","BackLinkLocationRef","useRef","state","from","useEffect","fetch","concat","then","res","ok","json","Promise","reject","Error","movie","catch","_jsxs","_Fragment","children","_jsx","to","current","message","width","src","poster_path","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","Link","Suspense","fallback","Outlet"],"sourceRoot":""}