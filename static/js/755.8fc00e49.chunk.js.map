{"version":3,"file":"static/js/755.8fc00e49.chunk.js","mappings":"uPAGMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAOnB,SAASC,IACtB,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAAWC,EAAAA,EAAAA,MAajB,OAXAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,GAADC,OARQ,6BAQI,kCAAAA,OAPL,qCAQTC,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAM,yFAClC,IACCN,MAAK,SAAAO,GAAM,OAAIjB,EAAYiB,EAAOC,QAAQ,IAC1CC,OAAM,SAAAhB,GAAK,OAAIC,EAASD,EAAM,GACnC,GAAG,KAEDiB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGnB,IAASoB,EAAAA,EAAAA,KAAA,MAAAD,SAAKnB,EAAMqB,WACrBD,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGvB,GACCA,EAAS0B,KAAI,SAAAC,GAAA,IAAEC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OACtBL,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAClC,EAAU,CAACwC,GAAE,WAAApB,OAAakB,GAAMG,MAAO,CAACC,KAAM1B,GAAUiB,SAAEM,KADpDD,EAEJ,QAKjB,C","sources":["Pages/Home/Home.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nconst StyledLink = styled(NavLink)`\ncolor: black;\ntext-decoration: none;\nfont-size: 20px;\n`\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'af02fe4d7c3feb4bd28b36239d2e4dd2';\nexport default function Home() {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } \n        return Promise.reject(new Error('Сталась помилка'))\n      })\n      .then(movies => setResponse(movies.results))\n      .catch(error => setError(error))\n  }, [])\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n      <h1>Trending today</h1>\n      <ul>\n        {response &&\n          response.map(({id, title}) =>\n            <li key={id}>\n              <StyledLink to={`/movies/${id}`} state={{from: location}}>{title}</StyledLink>\n            </li>)\n        }\n      </ul>\n    </>\n  )\n}"],"names":["StyledLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","Home","_useState","useState","_useState2","_slicedToArray","response","setResponse","_useState3","_useState4","error","setError","location","useLocation","useEffect","fetch","concat","then","res","ok","json","Promise","reject","Error","movies","results","catch","_jsxs","_Fragment","children","_jsx","message","map","_ref","id","title","to","state","from"],"sourceRoot":""}